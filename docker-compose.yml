version: '3.9'

services:
  redis:
    image: redis/redis-stack:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
      - "8001:8001"

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      DOCKER_API_VERSION: 1.22
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: 172.17.0.1 # ip a "docker0"
      KAFKA_CREATE_TOPICS: "links:1:1,recipes:1:1"
      KAFKA_MAX_MESSAGE_BYTES: 999999999
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  kafka-ui:
    image: provectuslabs/kafka-ui
    depends_on:
      - kafka
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092"
      DYNAMIC_CONFIG_ENABLED: 'true'

  influxdb:
    image: influxdb:2.1.1
    ports:
      - 8086:8086
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/ping"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: unless-stopped
    env_file:
      - ./docker/influxdb/influxdb.env
    volumes:
      - ./docker/influxdb_data:/var/lib/influxdb2
      - ./docker/influxdb/config.yml:/etc/influxdb2/config.yml

  telegraf:
    image: telegraf:1.21
    ports:
      - "8125:8125/udp"
    restart: unless-stopped
    depends_on:
      - influxdb
    env_file:
      - ./docker/telegraf/telegraf.env
    volumes:
      - ./docker/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro

  grafana:
    image: grafana/grafana-enterprise:8.4.4
    ports:
      - "3000:3000"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/api/health" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: unless-stopped
    user: root
    depends_on:
      - influxdb
    env_file:
      - ./docker/grafana/grafana.env
    volumes:
      - ./.generated_data/grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
      - ./docker/grafana/dashboards:/etc/dashboards

  db:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: mealplan
      POSTGRES_USER: mealplan
      POSTGRES_DB: mealplan
    ports:
      - '5432:5432'
    volumes:
      - ./.generated_data/db:/var/lib/postgresql/data
      - ./docker/postgres/migrations:/docker-entrypoint-initdb.d
